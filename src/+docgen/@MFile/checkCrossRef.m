function checkCrossRef(obj,fctlist)
% checks text for function names. If found, they are added with links.
%% Description:
%   This function is part of the class "MFile". It loops through the
%   current objects text and looks for function names as defined in the
%   input parameter "fctlist". If found (and its not a self call), then the
%   function is added as as a dummy object.
%   
%% Syntax:
%   [MFile].checkCrossRef(fctlist);
%
%% Input:
%   fctlist - list of known function names: "string array"
%       use the list in m2docgen.funcRefList generated by the function
%       m2docgen.GenerateFuncRefList;
%
%% Output:
%   no direct output values
%   stores text dummies in obj
%
%% Disclaimer:
%   Last editor:  Nils Böhnisch
%   Last edit on: 22.02.2022
%   Code version: 1.1
%
%   Copyright (c) 2020 Nils Böhnisch, Pierre Ollfisch.
%
%   This file is part of m2docgen.
%
%   m2docgen is free software: you can redistribute it and/or modify
%   it under the terms of the GNU General Public License as published by
%   the Free Software Foundation, either version 3 of the License, or
%   any later version. Also see the file "License.txt".

% go through list and search file for function name
objTxt          = obj.text;             % text from m-file
[~, objName]    = fileparts(obj.name);  % m-file name
for i = 1:size(fctlist,1)
    fName = fctlist(i,1); 
    for line = 1:length(objTxt)
        if (contains(objTxt(line),fName) && ~contains(objTxt(line),"%"))
            refPath = fctlist(i,2);
            dum = Dummy("{NAME_CALL}",fName);
            dum.type = "FUNCTREF";
            dum.refPath = refPath;
            if lower(fName) == lower(objName)
                % do not add a dummy if its a self call
            else
                obj.addDummy(dum);
            end
            break;
        end % end if contains
    end % end for line
end %end for i
end % end function checkCrossRef